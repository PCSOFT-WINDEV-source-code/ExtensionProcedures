#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : GlobalProcedures
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x137f8f5f005939e0
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1-
      
     type : 720896
  procedures :
   -
     name : ReadableColor
     internal_properties : CAAAAAgAAAAuH4H579LUce7CT/gPicsuKPFWVUo32Ty1mxqUEAHQdzZDsTF3O/HkKXZrOZgw1umsewVgOiRNLLsreAKryvXorUsvGHySew7LBAo1Z3oDiO8spwrh9INYWrRhQn/Sk2LHBL6FJqtiGd4iCpH1
     procedure_id : 1404999246953462240
     type_code : 15
     code : |1-
      // Summary: Returns a text color that will be readable on the specified background color
      // Syntax:
      //[ <Result> = ] ReadableColor (<InitialColor> is Color)
      //
      // Parameters:
      //	Initial color (Color): Background color
      // Return value:
      // 	Color: Adapted text color
      //
      procedure ReadableColor(InitialColor is Color) <extension> : Color
      
      nLightness		is int
      rLuminance		is real
      ReturnColor		is Color
      
      
      // Calculate the lightness of the color passed as parameter
      rLuminance = 1 - (0.299 * InitialColor.Red + 0.587 * InitialColor.Green + 0.114 * InitialColor.Blue)/255
      
      // According to the luminance, the text color must have a low or high lightness
      if rLuminance < 0.5 then
      	// Low luminosity
      	nLightness = 12
      else
      	// High luminosity
      	nLightness = 88
      end
      
      // The returned color keeps the shade and the saturation
      ReturnColor = HSL(ColorHue(InitialColor), ColorSaturation(InitialColor), nLightness)
      
      return ReturnColor
     type : 458752
   -
     name : Format
     internal_properties : CAAAAAgAAABgqYOAlyAUsd821YaBlMJBm9rl4e0Sg9qU10neS/qsR0yEgneUhNgM1ZyJEqWYBoDX+Gjia26SKfbXk2H4xqhbxhwEhT19Y5uWNpW3lCWSMbfbSSJA7Gp9cTjfe6Yo8WZGihL60rtL2TOouoU5tOuoRcprDJO9wvnStGtXat69/zNKlwR5xwSl2k0t/FPTdzUk
     procedure_id : 1404999246953527776
     type_code : 15
     code : |1+
      // Summary: Formats a date passed as parameter 
      // Syntax:
      //[ <Result> = ] Format (<dt> is DateTime [, <bShortFormat> is boolean])
      //
      // Parameters:
      //	dt (datetime): DateTime to format
      //	bShortFormat (boolean - default value=0): True to get a short format, False to get a long format
      // Return value:
      // 	UNICODE string: Readable string corresponding to the DateTime variable
      //
      procedure Format(dt is datetime, bShortFormat is boolean = False) <extension> : string
      
      if bShortFormat then
      	return dt.ToString(<§R1364e9ba00cc9b61¤en-GB¤MM-DD-AA HH:mm AP§>)
      else
      	return dt.ToString(<§R1364e9b800cb9352¤en-GB¤Dddd, Mmmm JJ YYYY, at HH:mm AP§>)
      end
     type : 458752
   -
     name : Multiply
     procedure_id : 1404999246953593312
     type_code : 15
     code : |1+
      // Summary: Multiplies each value of an array by a given multiplier
      // Syntax:
      //[ <Result> = ] Multiply (<arrIntegers> is array (int), <nMultiplier> is int)
      //
      // Parameters:
      //	arrIntegers (array (int)): Array of integers
      //	nMultiplier (int): Multiplier to use
      // Return value:
      // 	array (int): Result
      //
      procedure Multiply(arrIntegers is array of int, local nMultiplier is int) <extension> : array of int
      
      
      arrIntegers = arrIntegers.Map(nElement => nElement*nMultiplier)
      
      return arrIntegers
     type : 458752
   -
     name : RemoveDoubleSpace
     procedure_id : 1404999246953658848
     type_code : 15
     code : |1-
      // Summary: Removes double spaces from a text
      // Syntax:
      //[ <Result> = ] RemoveDoubleSpace (<s> is string)
      //
      // Parameters:
      //	s (UNICODE string): Initial text
      // Return value:
      // 	UNICODE string: Text without double spaces
      //
      procedure RemoveDoubleSpace(s is string) <extension>
      
      sRes is string = s
      while Contains(sRes, "  ")
      	sRes = sRes.Replace("  ", " ")
      end
      
      return sRes
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1362a5c400032196
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
